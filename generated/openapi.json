{
  "openapi": "3.1.0",
  "info": {
    "title": "Experiment API",
    "description": "API for managing experiment samples",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/services": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Create Service",
        "operationId": "create_service_api_v1_services_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "services"
        ],
        "summary": "List Services",
        "operationId": "list_services_api_v1_services_get",
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  },
                  "title": "Response List Services Api V1 Services Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{service_id}": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "Get Service",
        "operationId": "get_service_api_v1_services__service_id__get",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/{service_id}/experiments": {
      "post": {
        "tags": [
          "experiments"
        ],
        "summary": "Create Experiment",
        "operationId": "create_experiment_api_v1_services__service_id__experiments_post",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "experiments"
        ],
        "summary": "List Experiments",
        "operationId": "list_experiments_api_v1_services__service_id__experiments_get",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Experiment"
                  },
                  "title": "Response List Experiments Api V1 Services  Service Id  Experiments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{experiment_id}/criteria": {
      "post": {
        "tags": [
          "sampling criteria"
        ],
        "summary": "Create Criterion",
        "operationId": "create_criterion_api_v1_experiments__experiment_id__criteria_post",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Experiment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_criterion_api_v1_experiments__experiment_id__criteria_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperimentSamplingCriterion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "sampling criteria"
        ],
        "summary": "List Criteria",
        "operationId": "list_criteria_api_v1_experiments__experiment_id__criteria_get",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Experiment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExperimentSamplingCriterion"
                  },
                  "title": "Response List Criteria Api V1 Experiments  Experiment Id  Criteria Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/criteria/{criterion_id}/conditions": {
      "post": {
        "tags": [
          "sampling conditions"
        ],
        "summary": "Create Condition",
        "operationId": "create_condition_api_v1_criteria__criterion_id__conditions_post",
        "parameters": [
          {
            "name": "criterion_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Criterion Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentSamplingConditionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperimentSamplingCondition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "sampling conditions"
        ],
        "summary": "List Conditions",
        "operationId": "list_conditions_api_v1_criteria__criterion_id__conditions_get",
        "parameters": [
          {
            "name": "criterion_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Criterion Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExperimentSamplingCondition"
                  },
                  "title": "Response List Conditions Api V1 Criteria  Criterion Id  Conditions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{experiment_id}/buckets": {
      "post": {
        "tags": [
          "buckets"
        ],
        "summary": "Create Bucket",
        "operationId": "create_bucket_api_v1_experiments__experiment_id__buckets_post",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Experiment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentBucketCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperimentBucket"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "buckets"
        ],
        "summary": "List Buckets",
        "operationId": "list_buckets_api_v1_experiments__experiment_id__buckets_get",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Experiment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExperimentBucket"
                  },
                  "title": "Response List Buckets Api V1 Experiments  Experiment Id  Buckets Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{experiment_id}/samples": {
      "post": {
        "tags": [
          "samples"
        ],
        "summary": "Create Sample",
        "operationId": "create_sample_api_v1_experiments__experiment_id__samples_post",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Experiment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BucketedSampleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BucketedSample"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "samples"
        ],
        "summary": "List Samples",
        "operationId": "list_samples_api_v1_experiments__experiment_id__samples_get",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Experiment Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BucketedSample"
                  },
                  "title": "Response List Samples Api V1 Experiments  Experiment Id  Samples Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/experiments/{experiment_id}/samples/{sample_id}/complete": {
      "post": {
        "tags": [
          "samples"
        ],
        "summary": "Mark Sample Complete",
        "operationId": "mark_sample_complete_api_v1_experiments__experiment_id__samples__sample_id__complete_post",
        "parameters": [
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Sample Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BucketedSample"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_create_criterion_api_v1_experiments__experiment_id__criteria_post": {
        "properties": {
          "criterion": {
            "$ref": "#/components/schemas/ExperimentSamplingCriterionCreate"
          },
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/ExperimentSamplingConditionCreate"
            },
            "type": "array",
            "title": "Conditions"
          }
        },
        "type": "object",
        "required": [
          "criterion",
          "conditions"
        ],
        "title": "Body_create_criterion_api_v1_experiments__experiment_id__criteria_post"
      },
      "BucketedSample": {
        "properties": {
          "experiment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Experiment Id"
          },
          "sampled_value": {
            "type": "string",
            "title": "Sampled Value"
          },
          "sampled_entity": {
            "type": "string",
            "title": "Sampled Entity"
          },
          "allocated_bucket": {
            "type": "string",
            "title": "Allocated Bucket"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "complete": {
            "type": "boolean",
            "title": "Complete",
            "default": false
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "experiment_id",
          "sampled_value",
          "sampled_entity",
          "allocated_bucket",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "BucketedSample"
      },
      "BucketedSampleCreate": {
        "properties": {
          "experiment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Experiment Id"
          },
          "sampled_value": {
            "type": "string",
            "title": "Sampled Value"
          },
          "sampled_entity": {
            "type": "string",
            "title": "Sampled Entity"
          },
          "allocated_bucket": {
            "type": "string",
            "title": "Allocated Bucket"
          }
        },
        "type": "object",
        "required": [
          "experiment_id",
          "sampled_value",
          "sampled_entity",
          "allocated_bucket"
        ],
        "title": "BucketedSampleCreate"
      },
      "Experiment": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "scheduled_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled Start Date"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "last_deactivated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Deactivated At"
          },
          "last_activated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Activated At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "service_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "Experiment"
      },
      "ExperimentBucket": {
        "properties": {
          "experiment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Experiment Id"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name"
          },
          "percentage_distribution": {
            "type": "integer",
            "title": "Percentage Distribution"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "experiment_id",
          "bucket_name",
          "percentage_distribution",
          "created_at",
          "updated_at"
        ],
        "title": "ExperimentBucket"
      },
      "ExperimentBucketCreate": {
        "properties": {
          "experiment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Experiment Id"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name"
          },
          "percentage_distribution": {
            "type": "integer",
            "title": "Percentage Distribution"
          }
        },
        "type": "object",
        "required": [
          "experiment_id",
          "bucket_name",
          "percentage_distribution"
        ],
        "title": "ExperimentBucketCreate"
      },
      "ExperimentCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "service_id": {
            "type": "string",
            "format": "uuid",
            "title": "Service Id"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "scheduled_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled Start Date"
          }
        },
        "type": "object",
        "required": [
          "name",
          "service_id"
        ],
        "title": "ExperimentCreate"
      },
      "ExperimentSamplingCondition": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "property": {
            "type": "string",
            "title": "Property"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "criterion_id": {
            "type": "string",
            "format": "uuid",
            "title": "Criterion Id"
          },
          "experiment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Experiment Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "model",
          "property",
          "value",
          "condition",
          "id",
          "criterion_id",
          "experiment_id",
          "created_at",
          "updated_at"
        ],
        "title": "ExperimentSamplingCondition"
      },
      "ExperimentSamplingConditionCreate": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "property": {
            "type": "string",
            "title": "Property"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "criterion_id": {
            "type": "string",
            "format": "uuid",
            "title": "Criterion Id"
          },
          "experiment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Experiment Id"
          }
        },
        "type": "object",
        "required": [
          "model",
          "property",
          "value",
          "condition",
          "experiment_id"
        ],
        "title": "ExperimentSamplingConditionCreate"
      },
      "ExperimentSamplingCriterion": {
        "properties": {
          "sampling_model": {
            "type": "string",
            "title": "Sampling Model"
          },
          "sampling_attribute": {
            "type": "string",
            "title": "Sampling Attribute"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "experiment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Experiment Id"
          },
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/ExperimentSamplingCondition"
            },
            "type": "array",
            "title": "Conditions",
            "default": []
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "sampling_model",
          "sampling_attribute",
          "id",
          "experiment_id",
          "created_at",
          "updated_at"
        ],
        "title": "ExperimentSamplingCriterion"
      },
      "ExperimentSamplingCriterionCreate": {
        "properties": {
          "sampling_model": {
            "type": "string",
            "title": "Sampling Model"
          },
          "sampling_attribute": {
            "type": "string",
            "title": "Sampling Attribute"
          },
          "experiment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Experiment Id"
          }
        },
        "type": "object",
        "required": [
          "sampling_model",
          "sampling_attribute",
          "experiment_id"
        ],
        "title": "ExperimentSamplingCriterionCreate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Service": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "Service"
      },
      "ServiceCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ServiceCreate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}